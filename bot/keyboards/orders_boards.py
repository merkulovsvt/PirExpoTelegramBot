from datetime import datetime

from aiogram.types import InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from bot.callbacks.orders_callbacks import InvoicePrint, OrderDetails
from bot.callbacks.tickets_callbacks import TicketsList
from bot.data.orders_data import tickets_status_check


# Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤
def inline_orders_list(orders: dict) -> (str, InlineKeyboardMarkup):
    builder = InlineKeyboardBuilder()

    orders_list = []
    for order in orders:
        if order["status"] == 3 and tickets_status_check(order=order):
            date = datetime.fromisoformat(order['date']).strftime('%d.%m.%Y')
            orders_list.append((date, order["id"]))

    if orders_list:
        text = "–í–∞—à–∏ –∑–∞–∫–∞–∑—ã:"

        for order in sorted(orders_list, key=lambda x: x[0]):
            button_text = f"–ó–∞–∫–∞–∑ ‚Ññ{order[1]} –æ—Ç {order[0]}"

            order_id = str(order[1])
            builder.button(text=button_text, callback_data=OrderDetails(order_id=order_id))
    else:
        text = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –≤–∞—Å –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤"

    builder.adjust(1, repeat=True)
    return text, builder.as_markup()


# Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
def inline_order_details(order_id: str, order_details: dict) -> (str, InlineKeyboardMarkup):
    builder = InlineKeyboardBuilder()
    date = datetime.fromisoformat(order_details['date']).strftime('%d.%m.%Y')

    text = (f"–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ ‚Ññ{order_id}:\n"
            f"–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞ {date}.\n"
            f"–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: {order_details.get('sum')} —Ä—É–±.")

    if order_details["status"] == 3:
        builder.button(text="üé´ –ë–∏–ª–µ—Ç—ã", callback_data=TicketsList(ticket_type="*", order_id=order_id))
        builder.button(text="–í–æ–∑–≤—Ä–∞—Ç", url=order_details["return_request_url"])

        if order_details.get("invoice_pdf_url"):
            builder.button(text="–°—á–µ—Ç-–¥–æ–≥–æ–≤–æ—Ä", callback_data=InvoicePrint(order_id=order_id))
            builder.button(text="–£–ü–î", callback_data="1235")  # –î–æ–¥–µ–ª–∞—Ç—å
            builder.button(text="üõí –í–µ—Ä–Ω—É—Ç—Å—è –∫ –∑–∞–∫–∞–∑–∞–º", callback_data="orders_list")

            builder.adjust(2, 2, 1)
        else:
            builder.button(text="üõí –í–µ—Ä–Ω—É—Ç—Å—è –∫ –∑–∞–∫–∞–∑–∞–º", callback_data="orders_list")

            builder.adjust(2, 1)

    return text, builder.as_markup()
